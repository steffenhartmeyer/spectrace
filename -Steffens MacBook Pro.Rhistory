usethis::use_tidy_style()
devtools::document()
devtools::install()
usethis::use_tidy_style()
devtools::document()
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
spectrace_import("light.csv", tz = "Europe/Berlin")
spectrace_import("light.csv", tz = "Europe/Berlin")
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
x = spectrace_import("light.csv", tz = "Europe/Berlin")
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
x = spectrace_import("light.csv", tz = "Europe/Berlin")
x = spectrace_import_light("light.csv", tz = "Europe/Berlin")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
x = spectrace_import_light("light.csv", tz = "Europe/Berlin")
View(x)
calibration_100522 = readr::read_csv("Calibration_02.csv")
View(calibration_100522)
save(calibration_100522, "calibration_100522.rda")
save(calibration_100522, file = "data/calibration_100522.rda")
calibration = readr::read_csv("Calibration_02.csv")
save(calibration, file = "data/calibration.rda")
View(calibration)
calibration[1,1]
calibration[2,]
x = spectrace_import_light("light.csv", tz = "Europe/Berlin")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
View(x.cal)
View(calibration)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
View(x.cal)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
View(x.cal)
col(x)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
View(x.cal)
names(x)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1])
calibration = readr::read_csv("Calibration_02.csv")
calibration = readr::read_csv("Calibration_02.csv")
x.cal = spectrace_calibrate_light(x, x$serial[1], calibration)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1], calibration)
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1], calibration)
debugSource('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
# Stop if column names do not match
col_names = c("serial", "lux", "410nm", "435nm",
"460nm", "485nm", "510nm", "535nm",
"560nm", "585nm", "610nm", "645nm",
"680nm", "705nm", "730nm", "760nm")
col_names != names(calibration)
all(col_names != names(calibration))
all(col_names == names(calibration))
stopifnot(all(col_names == names(calibration)))
stopifnot(all(col_names == names(calibration)), "stop")
stopifnot("stop", all(col_names == names(calibration)))
stopifnot("stop", expr = all(col_names == names(calibration)))
help("stopifnot")
if(!all(col_names == names(calibration))){
stop("Calibration file columns are not correct!")
}
if(!all(col_names != names(calibration))){
stop("Calibration file columns are not correct!")
}
if(!all(col_names == names(calibration))){
stop("Calibration file columns are not correct!")
}
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1], calibration)
View(x.cal)
View(x)
View(x.cal)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x, x$serial[1], calibration)
x.cal = spectrace_calibrate_light(x, calibration)
View(x.cal)
usethis::use_tidy_style()
devtools::document()
rm(list = c("spectrace_calibrate_light", "spectrace_import_light"))
calibration = readr::read_csv("Calibration_02.csv")
save(calibration, file = "data/calibration.rda")
devtools::document()
devtools::document()
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_aopic.R', echo=TRUE)
x = spectrace_import_light("light.csv", tz = "Europe/Berlin")
calibration = readr::read_csv("Calibration_02.csv")
x.cal = spectrace_calibrate_light(x, calibration)
y = spectrace_aopic(x.cal)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_aopic.R', echo=TRUE)
y = spectrace_aopic(x.cal)
View(y)
View(y)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_aopic.R', echo=TRUE)
y = spectrace_aopic(x.cal)
View(y)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_aopic.R', echo=TRUE)
x = spectrace_import_aopic("light.csv", tz = "Europe/Berlin")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_aopic.R', echo=TRUE)
x = spectrace_import_aopic("light.csv", tz = "Europe/Berlin")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_aopic.R', echo=TRUE)
x = spectrace_import_aopic("light.csv", tz = "Europe/Berlin")
View(x)
usethis::use_tidy_style()
devtools::document()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
i = spline(x, y, x_out)
tic()
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
toc()
tic()
x.cal = spectrace_calibrate_light(x)
toc()
lightData = x.cal
tic()
# Irradiance data
irr_data <- lightData %>%
dplyr::select("410nm":"730nm") %>%
as.matrix()
# Interpolate to 1nm data using PCHIP
interp_fun <- function(y) {
wl_out <- seq(380, 780, 5)
wl_spectrace <- c(
410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730
)
y <- c(0, y, 0)
wl <- c(wl_out[1], wl_spectrace, wl_out[length(wl_out)])
if (!any(is.na(y))) {
approx(wl, y, xout = wl_out, method = "linear")
} else {
rep(NA, length(wl_out))
}
}
y = as.numeric(t(irr_data))
tic()
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
library(tictoc)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_aopic.R', echo=TRUE)
tic()
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
library(tidyverse)
tic()
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
toc()
tic()
x.cal = spectrace_calibrate_light(x)
toc()
lightData = x.cal
tic()
# Irradiance data
irr_data <- lightData %>%
dplyr::select("410nm":"730nm") %>%
as.matrix()
# Interpolate to 1nm data using PCHIP
interp_fun <- function(y) {
wl_out <- seq(380, 780, 5)
wl_spectrace <- c(
410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730
)
y <- c(0, y, 0)
wl <- c(wl_out[1], wl_spectrace, wl_out[length(wl_out)])
if (!any(is.na(y))) {
approx(wl, y, xout = wl_out, method = "linear")
} else {
rep(NA, length(wl_out))
}
}
y = as.numeric(t(irr_data))
# Irradiance data
irr_data <- lightData %>%
dplyr::select("410nm":"730nm") %>%
as.matrix()
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
toc()
tic()
x.cal = spectrace_calibrate_light(x)
load("~/OneDrive - epfl.ch/R/Packages/spectrace/data/calibration.rda")
x.cal = spectrace_calibrate_light(x)
toc()
lightData = x.cal
tic()
# Irradiance data
irr_data <- lightData %>%
dplyr::select("410nm":"730nm") %>%
as.matrix()
# Interpolate to 1nm data using PCHIP
interp_fun <- function(y) {
wl_out <- seq(380, 780, 5)
wl_spectrace <- c(
410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730
)
y <- c(0, y, 0)
wl <- c(wl_out[1], wl_spectrace, wl_out[length(wl_out)])
if (!any(is.na(y))) {
approx(wl, y, xout = wl_out, method = "linear")
} else {
rep(NA, length(wl_out))
}
}
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
wl_spectrace <- c(
410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730
)
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,780+400*(nrow(irr_data)-1),5)
i = spline(x, y, x_out)
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,780+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out)
i = approx(x, y, x_out, rule = 2)
tic()
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,780+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out, rule = 2)
toc()
irr_interp = matrix(i, nrow = nrow(irr_data))
tic()
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,780+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out, rule = 2)
irr_interp = matrix(i, nrow = nrow(irr_data))
toc()
# Calculate photopic illuminance
ill <- (irr_interp %*% as.numeric(cmf$y)) * 683 * 5
load("~/OneDrive - epfl.ch/R/Packages/spectrace/data/cmf.rda")
# Calculate photopic illuminance
ill <- (irr_interp %*% as.numeric(cmf$y)) * 683 * 5
i = approx(x, y, x_out, rule = 2)[[2]]
i = approx(x, y, x_out, rule = 2)[[1]]
i = approx(x, y, x_out, rule = 2)[[2]]
irr_interp = matrix(i, nrow = nrow(irr_data))
2015361/25192
x_out = seq(380,785+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out, rule = 2)[[2]]
2015362/25192
25192*80
x_out = seq(380,775+400*(nrow(irr_data)-1),5)
x[length(x)]
x_out[length(x-out)]
x_out[length(x_out)]
tic()
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,775+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out, rule = 2)[[2]]
irr_interp = matrix(i, nrow = nrow(irr_data))
toc()
# Calculate photopic illuminance
ill <- (irr_interp %*% as.numeric(cmf$y[1:nrow(cmf)-1])) * 683 * 5
View(irr_interp)
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,775+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out, rule = 2)[[2]]
irr_interp = matrix(i, nrow = nrow(irr_data))
plot(irr_interp[1,])
plot(irr_interp[1,], "-")
plot(irr_interp[1,], type = "l")
plot(irr_interp[5,], type = "l")
plot(irr_interp[200,], type = "l")
plot(irr_interp[3000,], type = "l")
plot(irr_interp[700,], type = "l")
plot(irr_interp[800,], type = "l")
plot(irr_interp[900,], type = "l")
plot(irr_interp[1000,], type = "l")
plot(irr_interp[10000,], type = "l")
plot(irr_interp[20000,], type = "l")
plot(irr_interp[10000,], type = "l")
plot(lightData[100,], type = "l")
plot(irr_data[100,], type = "l")
plot(irr_data[500,], type = "l")
plot(irr_data[1000,], type = "l")
plot(irr_data[5000,], type = "l")
plot(irr_interp[5000,], type = "l")
irr_interp <- t(apply(irr_data, 1, interp_fun))
irr_interp[irr_interp < 0] <- 0
# Interpolate to 1nm data using PCHIP
interp_fun <- function(y) {
wl_out <- seq(380, 780, 5)
wl_spectrace <- c(
410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730
)
y <- c(0, y, 0)
wl <- c(wl_out[1], wl_spectrace, wl_out[length(wl_out)])
if (!any(is.na(y))) {
approx(wl, y, xout = wl_out, method = "linear")[[2]]
} else {
rep(NA, length(wl_out))
}
}
irr_interp <- t(apply(irr_data, 1, interp_fun))
irr_interp[irr_interp < 0] <- 0
plot(irr_interp[5000,], type = "l")
y = as.numeric(t(irr_data))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(rep(seq(0, 400*(nrow(irr_data)-1), 400),13), ncol = 13)))
x_out = seq(380,775+400*(nrow(irr_data)-1),5)
i = approx(x, y, x_out, rule = 2)[[2]]
irr_interp = matrix(i, nrow = nrow(irr_data))
i = approx(x, y, x_out)[[2]]
i = approx(x, y, x_out, method = "linear")[[2]]
plot(x, y)
plot(x, y, type = "l")
View(irr_data)
plot(x:out, i, type = "l")
plot(x_out, i, type = "l")
irr_interp = t(matrix(i, ncol = nrow(irr_data)))
plot(irr_interp[5000,], type = "l")
plot(irr_interp[2000,], type = "l")
plot(irr_interp[6000,], type = "l")
plot(irr_interp[9000,], type = "l")
plot(irr_interp[8000,], type = "l")
plot(irr_interp[10000,], type = "l")
plot(irr_interp[15000,], type = "l")
plot(irr_interp[16000,], type = "l")
plot(irr_interp[17000,], type = "l")
plot(irr_interp[18000,], type = "l")
# Calculate photopic illuminance
ill <- (irr_interp %*% as.numeric(cmf$y[1:nrow(cmf)-1])) * 683 * 5
i = approx(x, y, x_out, method = "linear", rule = 2)[[2]]
irr_interp = t(matrix(i, ncol = nrow(irr_data)))
# Calculate photopic illuminance
ill <- (irr_interp %*% as.numeric(cmf$y[1:nrow(cmf)-1])) * 683 * 5
ill[5000]
ill[16000]
ill[18000]
ill[19000]
ill[4000]
ill[2000]
ill[12000]
ill[13000]
ill[14000]
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
View(x)
plot(irr_interp[5290,], type = "l")
ill[5290]
ill[5289]
plot(irr_interp[5289,], type = "l")
plot(irr_interp[5288,], type = "l")
plot(irr_interp[5177,], type = "l")
ill[5177]
y = cbind(rep(0, nrow(irr_data)), irr_data, rep(0, nrow(irr_data)))
View(y)
zeros = rep(0, nrow(irr_data))
wl_spectrace <- c(
380, 410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730, 775
)
y = as.numeric(t(cbind(zeros, irr_data, zeros)))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(
rep(seq(0, 400*(nrow(irr_data)-1), 400), length(wl_spectrace)),
ncol = length(wl_spectrace))))
x_out = seq(380,775+400*(nrow(irr_data)-1),5)
irr_interp = approx(x, y, x_out, method = "linear", rule = 2)[[2]]
irr_interp = t(matrix(irr_interp, ncol = nrow(irr_data)))
irr_interp = cbind(irr_interp, zeros)
plot(irr_interp[5289,], type = "l")
plot(irr_interp[5290,], type = "l")
tic()
zeros = rep(0, nrow(irr_data))
wl_spectrace <- c(
380, 410, 435, 460, 485, 510, 535, 560,
585, 610, 645, 680, 705, 730, 775
)
y = as.numeric(t(cbind(zeros, irr_data, zeros)))
x = rep(wl_spectrace, nrow(irr_data)) +
as.numeric(t(matrix(
rep(seq(0, 400*(nrow(irr_data)-1), 400), length(wl_spectrace)),
ncol = length(wl_spectrace))))
x_out = seq(380,775+400*(nrow(irr_data)-1),5)
irr_interp = approx(x, y, x_out, method = "linear", rule = 2)[[2]]
irr_interp = t(matrix(irr_interp, ncol = nrow(irr_data)))
irr_interp = cbind(irr_interp, zeros)
toc()
library(tictoc)
library(tidyverse)
tic()
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
toc()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::document()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
load("~/OneDrive - epfl.ch/R/Packages/spectrace/data/calibration.rda")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
x = spectrace_import_light("light.csv")
x = spectrace_import_light("light.csv", serial_number = "205A31BA4656")
library(tidyverse)
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x)
x.call = mutate("410nm" = "410nm" / "410nm_factor")
x.call = mutate(410nm = 410nm / 410nm_factor)
x.call = mutate("410nm" = "410nm" / "410nm_factor")
x.call = mutate("410nm" = "410nm" *2)
x.call = mutate("410nm" = 410nm *2)
x.call = mutate("410nm" = ~"410nm" *2)
x.call = mutate("410nm" = quote(410nm) *2)
x.call = mutate("410nm" = quote("410nm") *2)
x.call = mutate_("410nm" =  *2)
x.call = mutate_("410nm" = "410" *2)
x.call = mutate_("410nm" = "410nm" *2)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
x.cal = spectrace_calibrate_light(x)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x)
View(x.cal)
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x)
View(x.cal)
devtools::install()
load("~/OneDrive - epfl.ch/R/Packages/spectrace/data/calibration.rda")
View(calibration)
devtools::install()
devtools::install()
devtools::install()
devtools::install()
devtools::install()
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_import_light.R', echo=TRUE)
x = spectrace_import_light("light.csv", tz = "UTC", serial_number = "205A31BA4656")
source('~/OneDrive - epfl.ch/R/Packages/spectrace/R/spectrace_calibrate_light.R', echo=TRUE)
x.cal = spectrace_calibrate_light(x)
load("~/OneDrive - epfl.ch/R/Packages/spectrace/data/calibration.rda")
x.cal = spectrace_calibrate_light(x)
View(x.cal)
calibration = calibration %>% filter(serial != "205A31BA4656")
x.cal = spectrace_calibrate_light(x)
devtools::install()
