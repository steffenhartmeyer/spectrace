% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spectrace_classify_spectra.R
\name{spectrace_classify_spectra}
\alias{spectrace_classify_spectra}
\title{Classify spectra}
\usage{
spectrace_classify_spectra(
  lightData,
  referenceData = NULL,
  distance = c("euclidian"),
  return.encoded = FALSE
)
}
\arguments{
\item{lightData}{(Grouped) data frame containing the (calibrated) light data. Data needs
to be in wide format (see \code{\link{spectrace_to_wide}}). Classification
will be performed on the aggregated data (e.g. median) per group.}

\item{referenceData}{(Optional) data frame containing the reference spectra. Needs to
contain the same wavelength columns as `lightData`. Must consist of unique
spectra and must contain a column named `spectrum_id` identifying each
spectrum. If not provided, the in-built reference spectra are used (see
\code{\link{spectrace_reference_spectra}}).}

\item{distance}{Distance metric to use. Options are: "euclidian" (default).}

\item{return.encoded}{Logical. Add encoded principal components to data frame.
Defaults to FALSE.}
}
\value{
The original data with a new column for the classification. If `return.encoded`
   is TRUE then columns with the principal component loadings are added.
}
\description{
This function classifies each spectrum (i.e. row) by encoding the spectra using PCA
on the reference data and calculating the pairwise distance between the reference
and measured spectra. The reference spectrum with the minimum distance to the
measured spectrum is taken as the classification.
}
